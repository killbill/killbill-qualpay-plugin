name: release

on:
  workflow_dispatch:
    inputs:
      parent_version:
        description: 'New killbill-oss-parent version'
        required: false
        default: ''
      perform_version:
        description: 'tag to (re-)perform (in case of release:perform failure)'
        required: false
        default: ''

env:
  MAVEN_FLAGS: "-B -X"
  MAVEN_OPTS: "-Xmx2G -XX:+ExitOnOutOfMemoryError -Dmaven.wagon.rto=60000 -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        if: github.event.inputs.perform_version == ''
        uses: actions/checkout@v2
      - name: Checkout full repository
        # Required when performing an existing release.
        if: github.event.inputs.perform_version != ''
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Setup git user
        env:
          BUILD_USER: ${{ secrets.BUILD_USER }}
          BUILD_TOKEN: ${{ secrets.BUILD_TOKEN }}
        run: |
          git config --global user.email "contact@killbill.io"
          git config --global user.name "Kill Bill core team"
          git config --global url."https://${BUILD_USER}:${BUILD_TOKEN}@github.com/".insteadOf "git@github.com:"
      - name: Configure Java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Configure Sonatype mirror
        uses: s4u/maven-settings-action@v2.8.0
        # Go to Sonatype directly to avoid delay syncs (could get rid of this if actions/setup-java were to support mirrors).
        with:
          mirrors: '[{"id": "oss-releases", "name": "Sonatype releases", "mirrorOf": "central", "url": "https://oss.sonatype.org/content/repositories/releases/"}]'
          githubServer: false
          servers: '[{"id": "github","configuration": {"httpHeaders": {"property": {"name": "Authorization","value": "Bearer ${{ secrets.GITHUB_TOKEN }}"}}}}]'
      - name: Download Java dependencies
        # We do as much as we can, but it may not be enough (https://issues.apache.org/jira/browse/MDEP-82)
        run: |
          mvn ${MAVEN_FLAGS} clean install dependency:resolve dependency:resolve-plugins -DskipTests=true -Dgpg.skip=true -Psonatype-oss-release
